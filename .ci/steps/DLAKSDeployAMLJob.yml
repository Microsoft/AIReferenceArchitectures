

parameters:
  azureSubscription: 'AICAT-VB-E2E (989b90f7-da4f-41f9-84c9-44848802052d)'
  azure_subscription: 989b90f7-da4f-41f9-84c9-44848802052d
  location: DeployDeepModelKubernetes/{{cookiecutter.project_name}}/Keras_Tensorflow
  azureresourcegroup: dciborowhpdl
  workspacename: dciborowhpwsdl
  azureregion: westus2
  aksimagename: dciborowhpaksdl
  aks_name: dciborowhpaksdl
  aks_service_name: dciborowhpaksdlapi

steps:
- template: config_conda.yml
  parameters:
    location: ${{parameters.location}}
    azureSubscription: ${{parameters.azureSubscription}}
    conda: ${{parameters.conda}}

- template: azpapermill.yml
  parameters:
    notebook: 00_AMLSetup.ipynb
    location: ${{parameters.location}}
    azureSubscription: ${{parameters.azureSubscription}}
    conda: deployment_aml
    subscription_id: ${{parameters.azure_subscription}}
    resource_group: ${{parameters.azureresourcegroup}}
    workspace_name: ${{parameters.workspacename}}
    workspace_region: ${{parameters.azureregion}}
    image_name: ${{parameters.aksimagename}}

- template: azpapermill.yml
  parameters:
    notebook: 01_DevelopModel.ipynb
    location: ${{parameters.location}}
    azureSubscription: ${{parameters.azureSubscription}}
    conda: deployment_aml

- template: azpapermill.yml
  parameters:
    notebook: 02_DevelopModelDriver.ipynb
    location: ${{parameters.location}}
    azureSubscription: ${{parameters.azureSubscription}}
    conda: deployment_aml

- template: azpapermill.yml
  parameters:
    notebook: 03_BuildImage.ipynb
    location: ${{parameters.location}}
    azureSubscription: ${{parameters.azureSubscription}}
    conda: deployment_aml

- template: azpapermill.yml
  parameters:
    notebook: 04_DeployOnAKS.ipynb
    location: ${{parameters.location}}/aks
    azureSubscription: ${{parameters.azureSubscription}}
    conda: deployment_aml
    aks_name: ${{parameters.aks_name}}
    aks_location: ${{parameters.azureregion}}
    aks_service_name: ${{parameters.aks_service_name}}
    python_path:  $(System.DefaultWorkingDirectory)/DeployDeepModelKubernetes/{{cookiecutter.project_name}}/Keras_Tensorflow

- bash: |
    # Change this for prod? -> condition: or(canceled(),failed())
    echo Execute Resource Group Delete
	resourceGroupName = ${{parameters.azureresourcegroup}}
    existResponse=$(az group exists -n $resourceGroupName)
    if [ "$existResponse" == "true" ]; then
      echo Deleting project resource group
      az group delete --name $resourceGroupName --yes
    else
      echo Project resource group did not exist
    fi
    echo Done Cleanup
  displayName: 'Development Cleanup'
  condition: always()