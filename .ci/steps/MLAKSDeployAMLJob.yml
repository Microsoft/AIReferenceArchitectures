

parameters:
  azureSubscription: 'AICAT-VB-E2E (989b90f7-da4f-41f9-84c9-44848802052d)'
  azure_subscription: 989b90f7-da4f-41f9-84c9-44848802052d
  azureresourcegroup: dciborowhp
  workspacename: dciborowhpws
  azureregion: westus2
  aksimagename: dciborowhpaks
  aks_name: dciborowhpaks
  aks_service_name: dciborowhpaksapi
  location: DeployMLModelKubernetes/{{cookiecutter.project_name}}
  conda: MLAKSDeployAML
  pwd: $(System.DefaultWorkingDirectory)/_dciborow_MLAKSDeployAML

steps:
- template: config_conda.yml
  parameters:
    location: ${{parameters.location}}
    azureSubscription: ${{parameters.azureSubscription}}
    conda: ${{parameters.conda}}

- template: azpapermill.yml
  parameters:
    notebook:  00_AMLConfiguration.ipynb
    location: ${{parameters.location}}
    azureSubscription: ${{parameters.azureSubscription}}
    conda: ${{parameters.conda}}
    azure_subscription: ${{parameters.azure_subscription}}
    azureresourcegroup: ${{parameters.azureresourcegroup}}
    workspacename: ${{parameters.workspacename}}
    azureregion: ${{parameters.azureregion}}
    aksimagename: ${{parameters.aksimagename}}

- template: azpapermill.yml
  parameters:
    notebook: 01_DataPrep.ipynb
    location: ${{parameters.location}}
    azureSubscription: ${{parameters.azureSubscription}}
    conda: ${{parameters.conda}}

- bash: |
    mkdir -p ${{parameters.location}}/iotedge/data_folder
    mkdir -p ${{parameters.location}}/aks/data_folder
    cd ${{parameters.location}}
    cp data_folder/*.tsv iotedge/data_folder
    cp data_folder/*.tsv aks/data_folder
  displayName: 'Copying data'

- template: azpapermill.yml
  parameters:
    notebook: 02_TrainOnLocal.ipynb
    location: ${{parameters.location}}
    azureSubscription: ${{parameters.azureSubscription}}
    conda: ${{parameters.conda}}

- template: azpapermill.yml
  parameters:
    notebook: 03_DevelopScoringScript.ipynb
    location: ${{parameters.location}}
    azureSubscription: ${{parameters.azureSubscription}}
    conda: ${{parameters.conda}}

- template: azpapermill.yml
  parameters:
    notebook: 04_CreateImage.ipynb
    location: ${{parameters.location}}
    azureSubscription: ${{parameters.azureSubscription}}
    conda: ${{parameters.conda}}

- template: azpapermill.yml
  parameters:
    notebook: 05_DeployOnAKS.ipynb
    location: ${{parameters.location}}/aks
    azureSubscription: ${{parameters.azureSubscription}}
    conda: ${{parameters.conda}}
    aks_name: ${{parameters.aks_name}}
    azureregion: ${{parameters.azureregion}}
    aks_service_name: ${{parameters.aks_service_name}}
    aksimagename: ${{parameters.aksimagename}}

- bash: |
    # Change this for prod? -> condition: or(canceled(),failed())
    echo Execute Resource Group Delete
	resourceGroupName = ${{parameters.azureresourcegroup}}
    existResponse=$(az group exists -n $resourceGroupName)
    if [ "$existResponse" == "true" ]; then
      echo Deleting project resource group
      az group delete --name $resourceGroupName --yes
    else
      echo Project resource group did not exist
    fi
    echo Done Cleanup
  displayName: 'Development Cleanup'
  condition: always()